{
  "name": "ai-development-monitor",
  "displayName": "AI Development Monitor",
  "description": "Monitor and evaluate GitHub Copilot suggestions",
  "version": "0.5.1",
  "publisher": "local-publisher",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/username/ai-development-monitor.git"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ai-development-monitor.enable",
        "title": "AI Dev: Enable AI Development Monitor"
      },
      {
        "command": "ai-development-monitor.disable",
        "title": "AI Dev: Disable AI Development Monitor"
      },
      {
        "command": "ai-development-monitor.evaluateCopilotSuggestion",
        "title": "AI Dev: Evaluate Current Copilot Suggestion"
      },
      {
        "command": "ai-development-monitor.acceptSuggestion",
        "title": "AI Dev: Accept Current Suggestion"
      },
      {
        "command": "ai-development-monitor.rejectSuggestion",
        "title": "AI Dev: Reject Current Suggestion"
      },
      {
        "command": "ai-development-monitor.runDiagnosticTest",
        "title": "AI Dev: Run Diagnostic Test"
      },
      {
        "command": "ai-development-monitor.extractChatContext",
        "title": "AI Monitor: Extract Context from Copilot Chat"
      },
      {
        "command": "ai-development-monitor.retryConnection",
        "title": "AI Monitor: Retry MCP Connection"
      },
      {
        "command": "ai-development-monitor.showConnectionStatus",
        "title": "AI Monitor: Show Connection Status"
      },
      {
        "command": "ai-development-monitor.showStatusMenu",
        "title": "AI Monitor: Show Status Menu"
      },
      {
        "command": "ai-development-monitor.viewExtractedContext",
        "title": "AI Monitor: View Extracted Chat Context"
      },
      {
        "command": "ai-development-monitor.copilotChatContinue",
        "title": "AI Monitor: Tell Copilot to Continue"
      },
      {
        "command": "ai-development-monitor.copilotChatRequestChanges",
        "title": "AI Monitor: Request Changes from Copilot"
      },
      {
        "command": "ai-development-monitor.showPanel",
        "title": "AI Dev: Show Monitor Panel"
      },
      {
        "command": "ai-development-monitor.showTddDashboard",
        "title": "AI Dev: Show TDD Dashboard"
      }
    ],
    "configuration": {
      "title": "AI Development Monitor",
      "properties": {
        "aiDevelopmentMonitor.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the AI Development Monitor"
        },
        "aiDevelopmentMonitor.autoEvaluateChatSuggestions": {
          "type": "boolean",
          "default": true,
          "description": "Automatically evaluate code suggestions from Copilot Chat"
        },
        "aiDevelopmentMonitor.notificationLevel": {
          "type": "string",
          "enum": [
            "minimal",
            "normal",
            "detailed"
          ],
          "default": "normal",
          "description": "Control how verbose notifications are displayed"
        },
        "aiDevelopmentMonitor.showPanel": {
          "type": "boolean",
          "default": true,
          "description": "Automatically show the AI Monitor panel when evaluations complete"
        },
        "aiDevelopmentMonitor.apiUrl": {
          "type": "string",
          "default": "http://localhost:5000",
          "description": "URL of the AI Development Monitor API server"
        },
        "aiDevelopmentMonitor.mcpUrl": {
          "type": "string",
          "default": "ws://localhost:5001/ws",
          "description": "URL of the MCP server"
        },
        "aiDevelopmentMonitor.useMcp": {
          "type": "boolean",
          "default": true,
          "description": "Use MCP server for evaluations instead of HTTP API"
        },
        "aiDevelopmentMonitor.autoEvaluate": {
          "type": "boolean",
          "default": true,
          "description": "Automatically evaluate Copilot suggestions"
        },
        "aiDevelopmentMonitor.autoRetry": {
          "type": "boolean",
          "default": true,
          "description": "Automatically retry with 'Continue' on timeouts or errors"
        },
        "aiDevelopmentMonitor.retryInterval": {
          "type": "number",
          "default": 10000,
          "description": "Interval in milliseconds before retrying with 'Continue'"
        },
        "aiDevelopmentMonitor.tdd.autoRunTests": {
          "type": "boolean",
          "default": true,
          "description": "Automatically run tests when code changes"
        },
        "aiDevelopmentMonitor.tdd.showInlineCoverage": {
          "type": "boolean",
          "default": true,
          "description": "Show inline coverage highlighting in editor"
        },
        "aiDevelopmentMonitor.tdd.defaultIterations": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "description": "Default number of TDD iterations to run"
        },
        "aiDevelopmentMonitor.tdd.testFramework": {
          "type": "string",
          "enum": [
            "auto",
            "pytest",
            "jest",
            "junit",
            "googletest"
          ],
          "default": "auto",
          "description": "Test framework to use for TDD tests"
        },
        "aiDevelopmentMonitor.autoCaptureChatHistory": {
          "type": "boolean",
          "default": true,
          "description": "Automatically capture GitHub Copilot Chat conversations"
        },
        "aiDevelopmentMonitor.connectionTimeoutMs": {
          "type": "number",
          "default": 10000,
          "description": "Connection timeout in milliseconds"
        },
        "aiDevelopmentMonitor.maxReconnectAttempts": {
          "type": "number",
          "default": 5,
          "description": "Maximum number of immediate reconnection attempts before switching to persistent mode"
        },
        "aiDevelopmentMonitor.reconnectDelayMs": {
          "type": "number",
          "default": 2000,
          "description": "Initial delay between reconnection attempts in milliseconds (will increase with exponential backoff)"
        },
        "aiDevelopmentMonitor.exponentialBackoffFactor": {
          "type": "number",
          "default": 1.5,
          "description": "Factor by which to increase reconnection delay on each attempt"
        },
        "aiDevelopmentMonitor.persistentReconnectIntervalMs": {
          "type": "number",
          "default": 30000,
          "description": "Interval for persistent reconnection attempts in milliseconds"
        },
        "aiDevelopmentMonitor.heartbeatIntervalMs": {
          "type": "number",
          "default": 15000,
          "description": "Interval for heartbeat pings in milliseconds"
        },
        "aiDevelopmentMonitor.heartbeatTimeoutMs": {
          "type": "number",
          "default": 30000,
          "description": "Timeout for considering connection dead if no pong received"
        },
        "aiDevelopmentMonitor.connectionMonitorIntervalMs": {
          "type": "number",
          "default": 30000,
          "description": "Interval for monitoring connection health in milliseconds"
        },
        "aiDevelopmentMonitor.maxQueueLength": {
          "type": "number",
          "default": 50,
          "description": "Maximum number of messages to queue during disconnection"
        },
        "aiDevelopmentMonitor.keepQueuedMessagesOnDisconnect": {
          "type": "boolean",
          "default": true,
          "description": "Whether to keep queued messages when disconnecting intentionally"
        },
        "aiDevelopmentMonitor.logging.debugVerbosity": {
          "type": "string",
          "enum": [
            "minimal",
            "normal",
            "verbose"
          ],
          "default": "normal",
          "description": "Controls the verbosity of debug logging. Set to 'minimal' to reduce log spam for Copilot suggestions."
        },
        "aiDevelopmentMonitor.logging.debounceTime": {
          "type": "number",
          "default": 1000,
          "description": "Minimum time in milliseconds between Copilot suggestion logs (higher values reduce log spam)"
        },
        "aiDevelopmentMonitor.logging.rateLimitDuration": {
          "type": "number",
          "default": 2000,
          "description": "Rate limit window in milliseconds for duplicate log detection (higher values reduce duplicate logs)"
        },
        "aiDevelopmentMonitor.logging.ghostTextCheckInterval": {
          "type": "number",
          "default": 2000,
          "description": "Interval in milliseconds for checking ghost text (higher values reduce CPU usage)"
        }
      }
    }
  },
  "scripts": {
    "package": "vsce package"
  },
  "dependencies": {
    "ws": "^8.18.1"
  }
}
